# fix colors for modern terminals
set -g default-terminal "screen-256color"

# enable tmux interaction with the mouse
set-option -g mouse on

# optimize copy-paste to/from system buffers
set-option -g default-command "reattach-to-user-namespace -l bash"
setw -g mode-keys vi
bind ` copy-mode
unbind [
#unbind p
#bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel

# display message time
set -g display-time 1500

# optimize tmux powerline
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg colour230
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour125
set -g message-fg colour234
set -g message-bg colour166
set -g message-attr bold
#set -g status-left '#[fg=colour235,bg=colour252,bold]⮂ ❐ #S #[fg=colour252,bg=colour238,nobold]⮂#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
#set -g window-status-format "#[fg=colour230,bg=colour234] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour125]⮀#[fg=colour234,bg=colour125,noreverse,bold] #I ⮁ #W #[fg=colour125,bg=colour234,nobold]⮀"
set -g status-left '#[fg=colour235,bg=colour252,bold] #S #[fg=colour245,bg=colour238,bold] #(whoami) '
#set -g window-status-format "#[fg=colour230,bg=colour234] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour125,noreverse,bold] #I #{pane_current_path} "
set-window-option -g window-status-format ' #[fg=colour230,bg=colour234]#{window_index} #{pane_current_command} #(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) '
set-window-option -g window-status-current-format ' #[fg=colour234,bg=colour125,noreverse,bold]#{window_index} #[fg=colour254,bg=colour125,noreverse,bold]#{pane_current_command} #[fg=colour53,bg=colour125,noreverse,bold]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev)'
set-option -g status-interval 1

# rebind prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# auto window rename
set-window-option -g automatic-rename
set-window-option -g automatic-rename-format "#{pane_current_path}"

# status bar
#set -g status on
#set -g status-utf8 on

# set window split
bind-key v split-window -h
bind-key b split-window

# clear pane and history
#bind-key k send-keys "clear"\; send-keys "Enter"\; clear-history
bind-key k send-keys "clear && tmux clear-history" \; send-keys "Enter"

# integrate vim splits and tmux panes/windows
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# vim movement keys
setw -g mode-keys vi

# reload configuration with prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# allow C-a in other processes
bind C-a send-prefix

# shift windows around
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  powerline/powerline      \
'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Plugin settings
set -g @continuum-restore 'on'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# Open new windows in the current directory
bind c new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind b split-window -c "#{pane_current_path}"

# Renumber windows after any window is closed
set-option -g renumber-windows on
