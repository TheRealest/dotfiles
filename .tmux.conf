# fix colors for modern terminals
set -g default-terminal "screen-256color"

# enable tmux interaction with the mouse
set-option -g mouse on

# optimize copy-paste to/from system buffers
setw -g mode-keys vi
bind ` copy-mode
unbind [
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel

# display message time
set -g display-time 2000

# optimize tmux powerline
set -g status-left-length 52
set -g status-right-length 451
set -g status-style fg=colour230,bg=colour234
set -g window-status-activity-style bold
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour125
set -g message-style fg=colour234,bg=colour166,bold
set -g status-left '#[fg=colour235,bg=colour252,bold] #S #[fg=colour245,bg=colour238,bold] #(whoami) '
set-window-option -g window-status-format ' #[fg=colour230,bg=colour234]#{window_index} #{pane_current_command} #(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) '
set-window-option -g window-status-current-format ' #[fg=colour234,bg=colour125,noreverse,bold]#{window_index} #[fg=colour254,bg=colour125,noreverse,bold]#{pane_current_command} #[fg=colour53,bg=colour125,noreverse,bold]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev)'
set-option -g status-interval 1

# rebind prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# auto window rename
set-window-option -g automatic-rename
set-window-option -g automatic-rename-format "#{pane_current_path}"

# set window split
bind-key v split-window -h
bind-key b split-window

# clear pane and history
bind-key k send-keys "clear && tmux clear-history" \; send-keys "Enter"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

bind -n C-\\ last-pane

# vim movement keys
setw -g mode-keys vi

# reload configuration with prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# resize panes, fine control
bind -n C-S-Left resize-pane -L 1
bind -n C-S-Right resize-pane -R 1
bind -n C-S-Up resize-pane -U 1
bind -n C-S-Down resize-pane -D 1

# resize panes, course control -- in the iterm2 keymapping, S-M-arrow has been
# remapped to send the escape codes for C-arrow (since C-arrow is intercepted
# globally by the OS anyway), hence these bindings
bind -n C-Left resize-pane -L 10 # S-M-Left
bind -n C-Right resize-pane -R 10 # S-M-Right
bind -n C-Up resize-pane -U 10 # S-M-Up
bind -n C-Down resize-pane -D 10 # S-M-Down

# fix beginning of line hotkey (iTerm2 must bind cmd+left to hex code 0x1A == ^Z)
bind -n C-z send-keys C-a

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  powerline/powerline      \
'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Plugin settings
set -g @continuum-restore 'on'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
# To install plugins do prefix I
run-shell '~/.tmux/plugins/tpm/tpm'

# Open new windows in the current directory
bind c new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind b split-window -c "#{pane_current_path}"

# Renumber windows after any window is closed
set-option -g renumber-windows on
